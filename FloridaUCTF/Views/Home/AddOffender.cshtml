@using System.Web.Mvc.Html
@model FloridaUCTF.Models.AddOffenderViewModel

@{
    ViewBag.Title = "Add Offender";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
<h2>Add Offender</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="panel group-heading"> OFFENDER NAME </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Offender.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offender.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offender.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>
		<br />
		<div class="panel group-heading"> CURRENT HOME ADDRESS </div>
		<div class="form-group">
			@Html.LabelFor(model => model.OffenderAddress.Address, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.OffenderAddress.Address, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.OffenderAddress.Address, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.OffenderAddress.City, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.OffenderAddress.City, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.OffenderAddress.City, "", new { @class = "text-danger" })
			</div>
		</div>

		@*  ORIGINAL ENTRY FIELD FOR STATE.  SAVING UNTIL GET DROP DOWN TO WORK THEN WILL DELETE*@
		<div class="form-group">
			@Html.LabelFor(model => model.OffenderAddress.State, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.OffenderAddress.State, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.OffenderAddress.State, "", new { @class = "text-danger" })
			</div>
		</div>

		@*  NEW DROPDOWN FOR STATE.  DOESN'T WORK YET, SO JUST ENTERING TILL TIME TO FIX*@
		@*<div class="form-group">
			@Html.LabelFor(model => model.OffenderAddress.State, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(m => m.OffenderAddress.State, ViewBag.States)
				@Html.ValidationMessageFor(model => model.OffenderAddress.State, "", new { @class = "text-danger" })
			</div>
		</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.OffenderAddress.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.OffenderAddress.Zip, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.OffenderAddress.Zip, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="panel group-heading">  </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Offender.DriveLicense, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.DriveLicense, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.DriveLicense, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offender.DriveLicenseState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.DriveLicenseState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.DriveLicenseState, "", new { @class = "text-danger" })
            </div>
        </div>
			<br />

		<div class="panel group-heading"> OFFENDER NICKNAMES </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Offender.LastAKA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.LastAKA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.LastAKA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offender.FirstAKA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offender.FirstAKA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Offender.FirstAKA, "", new { @class = "text-danger" })
            </div>
        </div>
 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create and Continue" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Search", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
